<launch>
	<arg name="paused" default="false"/>

	<arg name="use_sim_time" default="true"/>

	<arg name="gui" default="true"/>

	<arg name="z_initial" default="0"/> 

	<arg name="headless" default="false"/>

	<arg name="debug" default="false"/>

	<arg name="world" default="$(find gazebo_ros)/worlds/empty_world.world"/>

	<arg name="model" default="$(find rhodent_description)/urdf/rhodent.xacro"/>

	<arg name="rvizconfig" default="$(find rhodent_description)/rviz/rhodent_simple.rviz" />

	<param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

	<!-- launching Gazebo with remapped topics -->
	<include file="$(find rhodent_gazebo)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world)"/>
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
		<remap from="/rhodent/imu" to="/imu" />
		<remap from="/rhodent/top_laser/scan" to="/scan" />
	</include>

	<!-- spawn the robot -->
	<node name="urdf_spawner" 
		pkg="gazebo_ros" 
		type="spawn_model" 
		respawn="false"
		output="screen"
		args="-urdf -model rhodent_robot -param robot_description -z $(arg z_initial)"/>


	<!-- this node calculate wheels' velocity from twist command and publish odom -->
	<node name="diff_kinematics" pkg="rhodent_navigation" type="diff_kinematics.py">
		<!-- remap for cartographer node -->
		<remap from="/rhodent/odom" to="/odom" />
	</node>

	<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="false"/>

	<!-- load controller parameters -->
	<rosparam file="$(find rhodent_gazebo)/config/controller.yaml" command="load"/>

	<!-- initialize controllers -->
	<node name="controller_spawner" pkg="controller_manager" type="spawner" 
		respawn="false"
		output="screen" ns="/rhodent" 
		args="joint_state_controller
		right_wheel_velocity_controller
		left_wheel_velocity_controller"/>

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
		respawn="false" 
		output="screen"
		ns = "rhodent"/>

</launch>